[install_branch]
- packages = [ "nano", "vim" ]
- test_output = "test"

apt("update and install")  
-> update
-> present:
    - names = packages

if(test_output == "test")
{
    assert("test-assert")
    - test_output == "test"

    file("copy a testfile")
    -> copy:
       - source_path = "test_file"
       - dest_path = "/tmp/test_file"

    template("create a template")
    - source_path = "test_template.j2"
    - dest_path = "/tmp/test_template"
    -> create:
       - checker = 42
       - name = "test-template"

    text_file("read template")
    - file_path = "/tmp/test_template"
    -> read:
       - blossom_output >> test_output

    print("test output")
    - output = "{{test_output}}"

    print("test output of size")
    - output = packages.size()

    for(package : packages)
    {
        print("test output in for-loop")
        - output = package
    }

    if(packages.size() == 2)
	{
	    for(i = 0; i < packages.size(); i++)
	    {
	        print("test iter-number")
	        - output = packages.get(i)
	    }
	}
}
else
{
    apt("first apt in else")
    -> absent:
       - names = "{{packages}}"

    apt("second apt in else")
    -> present:
       - names = "{{packages}}"
}
